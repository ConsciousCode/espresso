{
	"scopeName": "source.espresso",
	"patterns": [{ "include": "#expression" }],
	"repository": {
		"expression": {
			"patterns": [
				{"include": "#atom"},
				{"include": "#comment"},
				{"include": "#keyword"},
				{"include": "#operator"},
				{"include": "#type"},
				{"include": "#modifier"},
				{"include": "#paren"}
			]
		},
		"atom": {
			"patterns": [
				{
					"match": "\\b(none|true|false|inf|nan)\\b",
					"name": "constant.language.espresso"
				}, {
					"match": "\\b(\\d[\\d_]*|0b[01_]+|0o[0-7_]+|0x[a-fA-F\\d_]+)\\b",
					"name": "constant.numeric.int.espresso"
				}, {
					"match": "(\\d*\\.\\d+|\\d+\\.\\d*)([eE][-+]?\\d+)?",
					"name": "constant.numeric.real.espresso"
				}, {
					"match": "\\b(this|proto)\\b",
					"name": "variable.language.espresso"
				}, {
					"match": "\\b[rf]*'(\\.|[^']+)*'",
					"name": "string.quoted.single.espresso"
				}, {
					"match": "\\b[rf]*\"(\\.|[^\"]+)*\"",
					"name": "string.quoted.double.espresso"
				}, {
					"match": "\\b[rf]*'''.*?'''",
					"name": "string.quoted.triple.single.espresso"
				}, {
					"match": "\\b[rf]*\"\"\".*?\"\"\"",
					"name": "string.quoted.triple.double.espresso"
				}
			]
		},
		"comment": {
			"patterns": [
				{
					"match": "#.*$",
					"name": "comment.line.number-sign.espresso"
				}, {
					"match": "#\\*.*\\*#",
					"name": "comment.block.espresso"
				},
			]
		},
		"keyword": {
			"match": "\\b(in|as|has|is)\\b",
			"name": "keyword.operator.espresso"
		},
		"operator": {
			"match": "[-\\+*/%<>=!~^&|@]+|;",
			"name": "keyword.operator.espresso"
		},
		"type": {
			"patterns": [
				{
					"match": "\\b(proto|struct|function)\\b",
					"name": "storage.type.espresso"
				}, {
					"match": "\\b(([iu](8|16|32|64)|f(32|64))\\b",
					"name": "storage.type.espresso"
				}, {
					"match": "\\b(any|bool|int|real|string|list|object)\\b",
					"name": "storage.type.espresso"
				}
			]
		},
		"modifier": {
			"match": "\\b(var|const|static|public|private)\\b",
			"name": "storage.modifier.espresso"
		},
		"paren": {
			"begin": "\\(",
			"end": "\\)",
			"beginCaptures": {
				"0": {
					"name": "punctuation.paren.open.espresso"
				}
			},
			"endCaptures": {
				"0": {
					"name": "punctuation.paren.close.espresso"
				}
			},
			"name": "expression.group.espresso",
			"patterns": [
				{"include": "#expression"}
			]
		}
	}
}